name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  tests:
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - {name: Style, python: '3.12', tox: style}
          - {name: '3.12', python: '3.12', tox: py312, postgres: true}

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432
        options: --health-cmd pg_isready --health-interval 5s --health-timeout 5s --health-retries 10

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Update pip
        run: |
          pip install -U wheel
          pip install -U setuptools
          python -m pip install -U pip

      - name: Get pip cache dir
        id: pip-cache
        run: echo "::set-output name=dir::$(pip cache dir)"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: pip|${{ runner.os }}|${{ matrix.python }}|${{ hashFiles('setup.*') }}

      - run: pip install tox

      - name: Setup database
        if: matrix.postgres
        run: |
          sudo apt-get install postgresql-client libpq-dev
          export PGHOST=localhost
          export PGPORT=${{ job.services.postgres.ports[5432] }}
          export PGUSER=postgres
          createuser urshtest
          createdb -O urshtest urshtest
          echo "URSH_TEST_DATABASE_URI=postgresql://urshtest@localhost:${{ job.services.postgres.ports[5432] }}/urshtest" >> $GITHUB_ENV

      - run: tox -e ${{ matrix.tox }}
